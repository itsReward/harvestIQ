spring.application.name=harvestIQ

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/harvestiq
spring.datasource.username=dev
spring.datasource.password=development
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# JWT Security Configuration
security.jwt.token.secret-key=53cr3t_k3y_f0r_m@1z3_y13ld_pr3d1ct10n_@pp11c@t10n
security.jwt.token.expiration-time=86400000

jwt.secret=53cr3t_k3y_f0r_m@1z3_y13ld_pr3d1ct10n_@pp11c@t10n
jwt.expiration=86400000

# Logging Configuration
logging.level.root=INFO
logging.level.com.maizeyield=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method



# Advanced Recommendation Service Configuration
recommendation.api.enabled=${RECOMMENDATION_API_ENABLED:false}
recommendation.api.key=${RECOMMENDATION_API_KEY:}
recommendation.api.base-url=${RECOMMENDATION_API_URL:}
recommendation.api.timeout-seconds=30

# Scheduler Configuration
spring.task.scheduling.enabled=true
spring.task.scheduling.pool.size=5

# External Services Configuration
external.services.retry.max-attempts=3
external.services.retry.delay-ms=1000

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=weather-data,soil-recommendations,maize-varieties

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Application Metrics
management.metrics.enable.jvm=true
management.metrics.enable.system=true

# Weather API Configuration
weather.api.provider=${WEATHER_API_PROVIDER:openweather}
weather.api.key=${WEATHER_API_KEY:}
weather.openweather.api.key=${OPENWEATHER_API_KEY:}
weather.weatherstack.api.key=${WEATHERSTACK_API_KEY:}

# Auto-fetch configuration
weather.auto-fetch.enabled=true
weather.api.rate-limit.requests-per-minute=100

# Fallback configuration
weather.fallback.enabled=true
weather.fallback.providers=weatherapi,openweather

# Data validation
weather.data.validation.enabled=true
weather.data.cache.ttl-minutes=30