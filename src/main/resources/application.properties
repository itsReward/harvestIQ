# application.properties - Main configuration file
spring.application.name=harvestIQ

# ========================================
# DATABASE CONFIGURATION
# ========================================
spring.datasource.url=jdbc:postgresql://localhost:5432/harvestiq
spring.datasource.username=dev
spring.datasource.password=development
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool settings for better error handling
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# ========================================
# JPA CONFIGURATION  
# ========================================
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.use_sql_comments=true

# Enable batch processing
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ========================================
# FLYWAY CONFIGURATION
# ========================================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true

# ========================================
# SERVER CONFIGURATION
# ========================================
server.port=8181
server.servlet.context-path=/api

# Enhanced error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=true

# Request/Response settings
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.root=INFO
logging.level.com.maizeyield=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate=INFO

# Enhanced logging patterns
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ========================================
# SECURITY CONFIGURATION
# ========================================
jwt.secret=53cr3t_k3y_f0r_m@1z3_y13ld_pr3d1ct10n_@pp11c@t10n_hjkfksdjhfdfwhnsbmvbskfhowur20823085uotwhsfuy89w4hefgskhguiyt998u358hteghfy983758475894t3iury975y9899sifuhgfiwytsyiyyjvYGJFSRGEIGGjgfjdgjhgJGJHGJHGJHgiyi3y49JGFUIfs
jwt.expiration=86400000

# ========================================
# SWAGGER/OPENAPI CONFIGURATION
# ========================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# ========================================
# ACTUATOR CONFIGURATION (Enhanced for monitoring)
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,loggers,env
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.diskspace.enabled=true

# ========================================
# APPLICATION METRICS
# ========================================
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.process=true

# ========================================
# CACHING CONFIGURATION
# ========================================
spring.cache.type=simple
spring.cache.cache-names=weather-data,soil-recommendations,maize-varieties,user-sessions

# ========================================
# WEATHER API CONFIGURATION
# ========================================
weather.api.provider=${WEATHER_API_PROVIDER:openweather}
weather.api.key=${WEATHER_API_KEY:}
weather.openweather.api.key=${OPENWEATHER_API_KEY:}
weather.weatherstack.api.key=${WEATHERSTACK_API_KEY:}

# Auto-fetch configuration
weather.auto-fetch.enabled=true
weather.api.rate-limit.requests-per-minute=100
weather.api.timeout-seconds=30

# Fallback configuration
weather.fallback.enabled=true
weather.fallback.providers=weatherapi,openweather

# Data validation
weather.data.validation.enabled=true
weather.data.cache.ttl-minutes=30

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ========================================
# TASK SCHEDULING CONFIGURATION
# ========================================
spring.task.scheduling.enabled=true
spring.task.scheduling.pool.size=5
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100

# ========================================
# EXTERNAL SERVICES CONFIGURATION
# ========================================
external.services.retry.max-attempts=3
external.services.retry.delay-ms=1000
external.services.circuit-breaker.enabled=true
external.services.circuit-breaker.failure-threshold=5
external.services.circuit-breaker.recovery-timeout=30000

# ========================================
# RECOMMENDATION SERVICE CONFIGURATION
# ========================================
recommendation.api.enabled=${RECOMMENDATION_API_ENABLED:false}
recommendation.api.key=${RECOMMENDATION_API_KEY:}
recommendation.api.base-url=${RECOMMENDATION_API_URL:}
recommendation.api.timeout-seconds=30

# ========================================
# ERROR HANDLING CONFIGURATION
# ========================================
# Custom error handling
app.error.include-stacktrace=true
app.error.log-full-stacktrace=true
app.error.return-error-details=true

# ========================================
# REQUEST LOGGING CONFIGURATION
# ========================================
# Enable request/response logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.http.log-request-details=true

# Custom request logging
app.logging.requests.enabled=true
app.logging.requests.include-payload=true
app.logging.requests.include-headers=true
app.logging.requests.max-payload-length=1000

# ========================================
# VALIDATION CONFIGURATION
# ========================================
spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.jpa.properties.hibernate.validator.autoregister_listeners=false

# ========================================
# TRANSACTION CONFIGURATION
# ========================================
spring.jpa.properties.hibernate.connection.autocommit=false
spring.transaction.default-timeout=30
spring.transaction.rollback-on-commit-failure=true

# ========================================
# PERFORMANCE MONITORING
# ========================================
# Method execution timing
app.performance.log-slow-queries=true
app.performance.slow-query-threshold-ms=1000
app.performance.log-controller-timing=true
app.performance.log-service-timing=true

# ========================================
# DEVELOPMENT/DEBUG SPECIFIC SETTINGS
# ========================================
# Banner configuration
spring.banner.location=classpath:banner.txt
spring.output.ansi.enabled=always